name: Publish Container Image

on:
  workflow_call:

env:
  IMAGE_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-platform-images:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: true
      matrix:
        platform:
        - linux/amd64
        - linux/arm64
        - linux/arm

    steps:
    - name: "Checkout repository"
      uses: actions/checkout@master

    - name: Download binaries from earlier jobs
      uses: actions/download-artifact@v3
      with:
        name: binaries
        path: build/dist

    - name: Extract metadata (tags, labels) of Image
      id: image_meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Extract metadata of Platform
      id: platform_meta
      env:
        PLATFORM: ${{ matrix.platform }}
      run: |
        echo "os::$(dirname $PLATFORM)" >> $GITHUB_OUTPUT
        echo "arch::$(basename $PLATFORM)" >> $GITHUB_OUTPUT

    - name: Login to Github Packages
      uses: docker/login-action@v2
      with:
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build image and push to GitHub Container Registry
      uses: docker/build-push-action@v4
      with:
        push: true
        context: ./build
        file: ./build/Dockerfile
        platforms: ${{ matrix.platform }}
        build-args: |
          DIST_DIR=./dist
          TARGETOS=${{ steps.platform_meta.outputs.os }}
          TARGETARCH=${{ steps.platform_meta.outputs.arch }}
        tags: ${{ steps.image_meta.outputs.tags }}
        labels: ${{ steps.image_meta.outputs.labels }}
        outputs: type=image,name=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }},annotation-index.org.opencontainers.image.description=vault-raft-snapshot-agent multi-arch-image

    - name: Inspect image
      run: |
        docker buildx imagetools inspect ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.image_meta.outputs.version }}    

