name: Create or update Release

on:
  workflow_dispatch:
  push:
    tags:
    - "v**.**.**"

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true


jobs:
  run-checks:
    uses: ./.github/workflows/checks.yml

  create-draft-release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs:
    - run-checks

    steps:
    - name: "Checkout repository"
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Create or update Release
      uses: "ncipollo/release-action@v1"
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        tag: ${{ github.ref_name }}
        name: "Release ${{ github.ref_name }}"
        draft: true
        generateReleaseNotes: true
        allowUpdates: false
        updateOnlyUnreleased: true
        skipIfReleaseExists: true
        artifactErrorsFailBuild: true
        artifacts: LICENSE.txt

  release-binaries:
    if: always() && !cancelled() && !failure()
    uses: ./.github/workflows/release-binaries.yml
    secrets: inherit
    needs:
    - create-draft-release

  release-container-images:
    if: always() && !cancelled() && !failure()
    uses: ./.github/workflows/release-container-image.yml
    secrets: inherit
    needs:
    - release-binaries
    - create-draft-release

  publish-release:
    if: startsWith(github.ref, 'refs/tags/v') && !cancelled() && !failure()
    runs-on: ubuntu-latest
    needs:
    - create-draft-release
    - release-binaries
    - release-container-images

    outputs:
      latest-release: ${{ steps.latest-release.outputs.tag_name }}

    steps:
    - name: Get latest release
      uses: cardinalby/git-get-release-action@v1
      id: latest-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        latest: true
        draft: true
        prerelease: false

    - name: Publish release
      uses: "ncipollo/release-action@v1"
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        tag: ${{ github.ref.name }}
        allowUpdates: true
        draft: false
        makeLatest: ${{ steps.latest-release.outputs.tag_name == github.ref_name }}
        omitBodyDuringUpdate: true
        omitNameDuringUpdate: true
        skipIfReleaseExists: false
        updateOnlyUnreleased: false

  release-helm-charts:
    if: needs.publish-release.outputs.latest-release == github.ref_name
    uses: ./.github/workflows/release-helm-charts.yml
    with:
      latest-release: ${{ needs.publish-release.outputs.latest-release }}
    secrets: inherit
    needs:
    - publish-release

